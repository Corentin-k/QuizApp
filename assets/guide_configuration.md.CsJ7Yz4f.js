import{_ as e,c as o,a2 as n,o as i}from"./chunks/framework.BNQxy7xR.js";const f=JSON.parse('{"title":"Setting  Multiple Configurations in WebStorm","description":"","frontmatter":{},"headers":[],"relativePath":"guide/configuration.md","filePath":"guide/configuration.md"}'),r={name:"guide/configuration.md"};function a(s,t,l,g,u,c){return i(),o("div",null,t[0]||(t[0]=[n('<h1 id="setting-multiple-configurations-in-webstorm" tabindex="-1">Setting Multiple Configurations in WebStorm <a class="header-anchor" href="#setting-multiple-configurations-in-webstorm" aria-label="Permalink to &quot;Setting  Multiple Configurations in WebStorm&quot;">â€‹</a></h1><p>This guide explains how to set up configurations in WebStorm to run both the server and the Vue frontend simultaneously.</p><h2 id="step-1-configure-the-server" tabindex="-1">Step 1: Configure the Server <a class="header-anchor" href="#step-1-configure-the-server" aria-label="Permalink to &quot;Step 1: Configure the Server&quot;">â€‹</a></h2><ol><li>Go to <strong>Run &gt; Edit Configurations</strong> in WebStorm.</li><li>Click the <strong>+</strong> button to add a new configuration.</li><li>Select <strong>Node.js</strong> as the configuration type.</li><li>In the <strong>JavaScript file</strong> field, specify the path to your server file, e.g., <code>backend/server.js</code>.</li><li>Save the configuration by clicking <strong>OK</strong>.</li></ol><h2 id="step-2-configure-the-frontend" tabindex="-1">Step 2: Configure the Frontend <a class="header-anchor" href="#step-2-configure-the-frontend" aria-label="Permalink to &quot;Step 2: Configure the Frontend&quot;">â€‹</a></h2><ol><li>Repeat the steps above: go to <strong>Run &gt; Edit Configurations</strong>.</li><li>Click the <strong>+</strong> button and select <strong>npm</strong> as the configuration type.</li><li>In the <strong>Package.json file</strong> field, provide the path to your project&#39;s <code>package.json</code> file.</li><li>Under <strong>Command</strong>, select the appropriate npm script (e.g., <code>run dev</code>).</li><li>Save the configuration by clicking <strong>OK</strong>.</li></ol><h2 id="step-3-combine-configurations" tabindex="-1">Step 3: Combine Configurations <a class="header-anchor" href="#step-3-combine-configurations" aria-label="Permalink to &quot;Step 3: Combine Configurations&quot;">â€‹</a></h2><ol><li>Create a new compound configuration: <ul><li>Go to <strong>Run &gt; Edit Configurations</strong>.</li><li>Click the <strong>+</strong> button and select <strong>Compound</strong> as the configuration type.</li></ul></li><li>Name your configuration (e.g., <code>Start Server and Frontend</code>).</li><li>Add the two configurations you created earlier (server and frontend) to the <strong>Run/Debug Configurations</strong> list.</li><li>Save the configuration by clicking <strong>OK</strong>.</li></ol><h2 id="you-re-all-set" tabindex="-1">You&#39;re All Set! <a class="header-anchor" href="#you-re-all-set" aria-label="Permalink to &quot;You&#39;re All Set!&quot;">â€‹</a></h2><p>Now, you can start both the server and frontend together by running the compound configuration. This simplifies your workflow and saves time during development. ðŸš€</p>',10)]))}const h=e(r,[["render",a]]);export{f as __pageData,h as default};
